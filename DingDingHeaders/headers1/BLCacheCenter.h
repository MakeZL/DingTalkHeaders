//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 16 2016 16:28:45).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

#import "BLCacheDelegate-Protocol.h"

@class BLCache, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface BLCacheCenter : NSObject <BLCacheDelegate>
{
    float _maxBytesForMemoryObject;
    NSString *_cacheDirectory;
    unsigned long long _countLimit;
    NSString *_cacheName;
    NSObject<OS_dispatch_queue> *_diskQueue;
    BLCache *_memoryCache;
    NSMutableDictionary *_hashCache;
    NSMutableDictionary *_cacheInfo;
}

+ (id)imageWithData:(id)arg1;
+ (_Bool)isKindOfImage:(id)arg1;
+ (id)cacheNamesPath;
+ (void)cleanExpiredFiles;
+ (id)allCacheCenters;
+ (id)cacheCenterWithName:(id)arg1;
+ (id)sharedCacheCenter;
+ (id)allCacheCenterNames;
+ (void)initializeCacheCenterNames;
+ (void)initialize;
@property(retain, nonatomic) NSMutableDictionary *cacheInfo; // @synthesize cacheInfo=_cacheInfo;
@property(retain, nonatomic) NSMutableDictionary *hashCache; // @synthesize hashCache=_hashCache;
@property(retain, nonatomic) BLCache *memoryCache; // @synthesize memoryCache=_memoryCache;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *diskQueue; // @synthesize diskQueue=_diskQueue;
@property(retain, nonatomic) NSString *cacheName; // @synthesize cacheName=_cacheName;
@property(nonatomic) float maxBytesForMemoryObject; // @synthesize maxBytesForMemoryObject=_maxBytesForMemoryObject;
@property(nonatomic) unsigned long long countLimit; // @synthesize countLimit=_countLimit;
@property(copy, nonatomic) NSString *cacheDirectory; // @synthesize cacheDirectory=_cacheDirectory;
- (void).cxx_destruct;
- (void)cache:(id)arg1 willEvictObject:(id)arg2;
- (void)saveCacheNames;
- (void)removeCacheInfoForHashKeys:(id)arg1;
- (void)removeCacheInfoForHashKey:(id)arg1;
- (void)removeCacheInfoForKeys:(id)arg1;
- (void)removeCacheInfoForKey:(id)arg1;
- (void)setCacheFileName:(id)arg1 forHashKey:(id)arg2;
- (void)setCacheFileName:(id)arg1 forKey:(id)arg2;
- (void)setCacheExpireInterval:(double)arg1 forHashKey:(id)arg2;
- (void)setCacheExpireInterval:(double)arg1 forKey:(id)arg2;
- (void)objectForKey:(id)arg1 fileName:(id)arg2 toImage:(_Bool)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (id)objectForKey:(id)arg1 toImage:(_Bool)arg2;
- (id)objectForKey:(id)arg1 fileName:(id)arg2 toImage:(_Bool)arg3;
- (void)imageForKey:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)imageForKey:(id)arg1;
- (void)dataForKey:(id)arg1 fileName:(id)arg2 completionBlock:(CDUnknownBlockType)arg3;
- (void)dataForKey:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)dataForKey:(id)arg1 andFileName:(id)arg2;
- (id)dataForKey:(id)arg1;
- (void)removeMemoryCacheForKey:(id)arg1;
- (_Bool)hasCacheForKeyInMemory:(id)arg1;
- (id)objectForKeyInMemory:(id)arg1;
- (id)imageForKeyInMemory:(id)arg1;
- (id)dataForKeyInMemory:(id)arg1;
- (void)setObjectInMemory:(id)arg1 forKey:(id)arg2;
- (void)removeDiskCacheForHashKey:(id)arg1;
- (void)removeDiskCacheForKey:(id)arg1;
- (_Bool)hasCacheForKeyInDisk:(id)arg1 fileName:(id)arg2;
- (_Bool)hasCacheForKeyInDisk:(id)arg1;
- (_Bool)createDirectoryIfNeeded:(id)arg1;
- (id)subDirectoryForKey:(id)arg1;
- (id)cachePathForHashKey:(id)arg1 fileName:(id)arg2;
- (id)cachePathForKey:(id)arg1 fileName:(id)arg2;
- (id)cachePathForHashKey:(id)arg1;
- (id)cachePathForKey:(id)arg1;
- (id)cacheInfoPath;
- (id)md5ForString:(id)arg1;
- (id)hashForString:(id)arg1;
- (void)calculateCacheSizeWithCompletion:(CDUnknownBlockType)arg1;
- (void)cleanDiskOnCompletion:(CDUnknownBlockType)arg1;
- (void)clearDisk;
- (void)clearMemory;
- (void)cleanExpiredFiles;
- (void)removeAllCache;
- (void)removeCacheForKey:(id)arg1;
- (void)setImage:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 toDisk:(_Bool)arg4 withExpiredTimeInterval:(double)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)setImage:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 withExpiredTimeInterval:(double)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)setImage:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 toDisk:(_Bool)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)setImage:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)setImage:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 toDisk:(_Bool)arg4 withExpiredTimeInterval:(double)arg5;
- (void)setImage:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 withExpiredTimeInterval:(double)arg4;
- (void)setImage:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 toDisk:(_Bool)arg4;
- (void)setImage:(id)arg1 forKey:(id)arg2 fileName:(id)arg3;
- (void)setData:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 toDisk:(_Bool)arg4 withExpiredTimeInterval:(double)arg5 completionBlock:(CDUnknownBlockType)arg6;
- (void)setData:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 withExpiredTimeInterval:(double)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)setData:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 toDisk:(_Bool)arg4 completionBlock:(CDUnknownBlockType)arg5;
- (void)setData:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)setData:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 toDisk:(_Bool)arg4 withExpiredTimeInterval:(double)arg5;
- (void)setData:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 withExpiredTimeInterval:(double)arg4;
- (void)setData:(id)arg1 forKey:(id)arg2 fileName:(id)arg3 toDisk:(_Bool)arg4;
- (void)setData:(id)arg1 forKey:(id)arg2 fileName:(id)arg3;
- (void)receiveMemoryWarning:(id)arg1;
- (void)dealloc;
- (id)initWithCacheName:(id)arg1;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

