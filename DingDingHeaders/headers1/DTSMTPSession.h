//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 16 2016 16:28:45).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSError, NSOperationQueue, NSString;

@interface DTSMTPSession : NSObject
{
    struct _opaque_pthread_mutex_t mCancelLock;
    struct _opaque_pthread_mutex_t mCanCancelLock;
    struct mailsmtp *mSmtp;
    _Bool _checkCertificateEnabled;
    _Bool _mShouldDisconnect;
    _Bool _useHeloIPEnabled;
    _Bool _mSendingCancelled;
    _Bool _mCanCancel;
    int _authType;
    NSString *_hostname;
    unsigned long long _port;
    NSString *_username;
    NSString *_password;
    NSString *_OAuth2Token;
    long long _mConnectionType;
    double _timeout;
    NSString *_lastSMTPResponse;
    long long _lastLibetpanError;
    long long _lastSMTPResponseCode;
    NSError *_error;
    long long _mState;
    CDUnknownBlockType _mProgressCallback;
    NSOperationQueue *_queue;
}

@property(retain, nonatomic) NSOperationQueue *queue; // @synthesize queue=_queue;
@property _Bool mCanCancel; // @synthesize mCanCancel=_mCanCancel;
@property _Bool mSendingCancelled; // @synthesize mSendingCancelled=_mSendingCancelled;
@property(copy, nonatomic) CDUnknownBlockType mProgressCallback; // @synthesize mProgressCallback=_mProgressCallback;
@property(nonatomic, getter=isUserHeloIPEnabled) _Bool useHeloIPEnabled; // @synthesize useHeloIPEnabled=_useHeloIPEnabled;
@property(nonatomic) _Bool mShouldDisconnect; // @synthesize mShouldDisconnect=_mShouldDisconnect;
@property(nonatomic) long long mState; // @synthesize mState=_mState;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(nonatomic) long long lastSMTPResponseCode; // @synthesize lastSMTPResponseCode=_lastSMTPResponseCode;
@property(nonatomic) long long lastLibetpanError; // @synthesize lastLibetpanError=_lastLibetpanError;
@property(retain, nonatomic) NSString *lastSMTPResponse; // @synthesize lastSMTPResponse=_lastSMTPResponse;
@property(nonatomic, getter=isCheckCertificateEnabled) _Bool checkCertificateEnabled; // @synthesize checkCertificateEnabled=_checkCertificateEnabled;
@property(nonatomic) double timeout; // @synthesize timeout=_timeout;
@property(nonatomic) long long mConnectionType; // @synthesize mConnectionType=_mConnectionType;
@property(nonatomic) int authType; // @synthesize authType=_authType;
@property(copy, nonatomic) NSString *OAuth2Token; // @synthesize OAuth2Token=_OAuth2Token;
@property(copy, nonatomic) NSString *password; // @synthesize password=_password;
@property(copy, nonatomic) NSString *username; // @synthesize username=_username;
@property(nonatomic) unsigned long long port; // @synthesize port=_port;
@property(copy, nonatomic) NSString *hostname; // @synthesize hostname=_hostname;
- (void).cxx_destruct;
- (void)queueOperation:(id)arg1;
- (void)cancelMessageSending;
- (void)noop;
- (void)sendMessage:(id)arg1 recipients:(id)arg2 messageData:(id)arg3 progressBlock:(CDUnknownBlockType)arg4;
- (id)dataWithFilteredBcc:(id)arg1;
- (void)checkAccount:(id)arg1;
- (void)login;
- (void)loginIfNeeded;
- (void)connect;
- (void)connectIfNeeded;
- (void)disconnect;
- (void)unsetup;
- (void)setup;
- (void)bodyProgress:(unsigned int)arg1 maximum:(unsigned int)arg2;
- (void)dealloc;
- (id)init;

@end

