//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 16 2016 16:28:45).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <Foundation/NSObject.h>

@class NSString, OpenDatabase;
@protocol OpenMDHandlerDelegate;

@interface OpenMDHandler : NSObject
{
    NSString *_tableName;
    _Bool _hasDropped;
    OpenDatabase *_database;
    Class _modelClazz;
    NSString *_shardingId;
    id <OpenMDHandlerDelegate> _delegate;
}

+ (id)generateTableNameWithModelClazz:(Class)arg1 shardingId:(id)arg2;
+ (void)removeAllHandlersWithDatabaseUUID:(id)arg1;
+ (void)removeHandlerFromCache:(id)arg1;
+ (void)cacheHandler:(id)arg1;
+ (id)dequeueCachedHandlerWithDatabase:(id)arg1 modelClazz:(Class)arg2 shardingId:(id)arg3;
+ (void)onOpenDatabaseDidClose:(id)arg1;
+ (id)handlerWithDatabase:(id)arg1 modelClazz:(Class)arg2 shardingId:(id)arg3;
+ (id)handlerWithDatabase:(id)arg1 modelClazz:(Class)arg2 shardingId:(id)arg3 delegate:(id)arg4;
+ (void)initialize;
@property(nonatomic) __weak id <OpenMDHandlerDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, copy, nonatomic) NSString *shardingId; // @synthesize shardingId=_shardingId;
@property(readonly, nonatomic) Class modelClazz; // @synthesize modelClazz=_modelClazz;
@property(nonatomic) __weak OpenDatabase *database; // @synthesize database=_database;
- (void).cxx_destruct;
- (void)processResultsAfterQueryDB:(id)arg1;
- (id)findWithPrimaryKey:(unsigned long long)arg1;
- (id)findByColumn:(id)arg1 doubleValue:(double)arg2;
- (id)findByColumn:(id)arg1 integerValue:(long long)arg2;
- (id)findByColumn:(id)arg1 unsignedIntegerValue:(unsigned long long)arg2;
- (id)findByColumn:(id)arg1 value:(id)arg2;
- (id)findWithSql:(id)arg1 withParameters:(id)arg2 needsPreprocessing:(_Bool)arg3;
- (id)findWithSql:(id)arg1 withParameters:(id)arg2;
- (id)findWithSqlWithParameters:(id)arg1;
- (id)findWithSql:(id)arg1;
- (void)asyncBlock:(CDUnknownBlockType)arg1;
- (_Bool)deleteModelWithColumnKey:(id)arg1 columnValue:(id)arg2;
- (_Bool)deleteModel:(id)arg1;
- (_Bool)saveModel:(id)arg1 withColumnKey:(id)arg2 isInserted:(_Bool *)arg3;
- (_Bool)saveModel:(id)arg1 withColumnKey:(id)arg2;
- (_Bool)saveModel:(id)arg1;
- (_Bool)updateModel:(id)arg1 withColumnKey:(id)arg2;
- (_Bool)insertModel:(id)arg1;
- (void)asyncInTransaction:(CDUnknownBlockType)arg1 done:(CDUnknownBlockType)arg2;
- (void)inTransaction:(CDUnknownBlockType)arg1;
- (void)asyncExecuteSql:(id)arg1 withParameters:(id)arg2 done:(CDUnknownBlockType)arg3;
- (id)executeSql:(id)arg1 withParameters:(id)arg2;
- (id)executeSql:(id)arg1;
- (void)dropTable;
- (_Bool)deleteAll;
- (id)findAll;
- (id)propertyValues:(id)arg1;
- (id)columnsWithoutPrimaryKey;
- (id)columns;
- (void)_ensureTableValid;
- (id)_generateTableName;
- (void)dealloc;
- (id)finalTableName;
- (id)initWithDatabase:(id)arg1 modelClazz:(Class)arg2 shardingId:(id)arg3;
- (id)initWithDatabase:(id)arg1 modelClazz:(Class)arg2 shardingId:(id)arg3 delegate:(id)arg4;

@end

